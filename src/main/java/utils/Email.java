/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/Classes/Class.java to edit this template
 */
package utils;

import java.util.Date;
import jakarta.mail.Authenticator;
import jakarta.mail.PasswordAuthentication;
import java.util.Properties;
import jakarta.mail.Message;
import jakarta.mail.Session;
import jakarta.mail.Transport;
import jakarta.mail.internet.InternetAddress;
import jakarta.mail.internet.MimeMessage;
import java.util.Random;

/**
 *
 * @author tung
 */
public class Email {
    // Email: ngnahtg123@gmail.com
    // password vuwv jbhf cgfp szng

    static final String from = "ngnahtg123@gmail.com";
    static final String password = "vuwv jbhf cgfp szng";

    public static int sendEmailOTP(String to) {
        // Properties : khai bao thuoc tinh
        Properties props = new Properties();
        props.put("mail.smtp.host", "smtp.gmail.com"); // SMTP HOST
        props.put("mail.smtp.port", "587"); // TLS 587 SSL 465
        props.put("mail.smtp.auth", "true");
        props.put("mail.smtp.starttls.enable", "true");

        // create Authenticator
        Authenticator auth = new Authenticator() {
            @Override
            protected PasswordAuthentication getPasswordAuthentication() {
                return new PasswordAuthentication(from, password);
            }
        };

        // phien lam viec
        Session session = Session.getInstance(props, auth);

        // tao 1 tin nhan 
        MimeMessage msg = new MimeMessage(session);

        // T·∫°o m√£ OTP ng·∫´u nhi√™n g·ªìm 6 ch·ªØ s·ªë
        int randomSixDigits = 100000 + new Random().nextInt(900000);

        try {
            msg.addHeader("Content-type", "text/html; charset=UTF-8"); // Thi·∫øt l·∫≠p ƒë·ªãnh d·∫°ng HTML
            msg.setFrom(new InternetAddress(from, "T-Tasty Fruits")); // T√™n ng∆∞·ªùi g·ª≠i hi·ªÉn th·ªã
            msg.setRecipients(Message.RecipientType.TO, InternetAddress.parse(to, false)); // ƒê·ªãa ch·ªâ ng∆∞·ªùi nh·∫≠n
            msg.setSubject("üçì M√£ OTP x√°c th·ª±c t·ª´ T-Tasty!"); // Ti√™u ƒë·ªÅ email
            msg.setSentDate(new Date()); // Ng√†y g·ª≠i

            // N·ªôi dung HTML c·ªßa email
            String htmlContent = "<div style='font-family:Arial, sans-serif; background:#f9f9f9; padding:40px;'>"
                    + "<div style='max-width:600px; margin:auto; background:white; padding:30px; border-radius:10px; box-shadow:0 0 10px rgba(0,0,0,0.05);'>"
                    + "<div style='text-align:center;'>"
                    + "<img src='https://img.redocn.com/sheji/20240414/yourencaofeijiandeniunaigaoqingtu_13282921.jpg.400.jpg' alt='T-Tasty Logo' style='width:300px; margin-bottom:20px;'/>"
                    + "</div>"
                    + "<h2 style='color:#E91E63; text-align:center;'>Xin ch√†o t·ª´ T-Tasty Fruits! üçáüçä</h2>"
                    + "<p style='font-size:16px; color:#555;'>M√£ OTP c·ªßa b·∫°n ƒë·ªÉ x√°c th·ª±c email l√†:</p>"
                    + "<div style='font-size:32px; font-weight:bold; color:#4CAF50; text-align:center; margin:20px 0;'>"
                    + randomSixDigits + "</div>"
                    + "<p style='font-size:14px; color:#999;'>L∆∞u √Ω: M√£ n√†y c√≥ hi·ªáu l·ª±c trong <strong>5 ph√∫t</strong>.</p>"
                    + "<hr style='margin:30px 0;'>"
                    // Footer
                    + "<div style='font-size:14px; color:#777;'>"
                    + "<p style='margin-bottom:5px;'><strong>V·ªÅ ch√∫ng t√¥i:</strong> T-Tasty l√† c·ª≠a h√†ng tr√°i c√¢y t∆∞∆°i ngon t·∫°i H√† N·ªôi, n∆°i b·∫°n lu√¥n ƒë∆∞·ª£c tr·∫£i nghi·ªám ch·∫•t l∆∞·ª£ng v√† s·ª± t·∫≠n t√¢m.</p>"
                    + "<p style='margin-bottom:5px;'><strong>Li√™n h·ªá:</strong> +0344497444</p>"
                    + "<p style='margin-bottom:0;'>ƒê·ªãa ch·ªâ: Long Bi√™n, H√† N·ªôi</p>"
                    + "</div>"
                    + "<p style='font-size:12px; color:#aaa; margin-top:30px;'>N·∫øu b·∫°n kh√¥ng y√™u c·∫ßu m√£ OTP n√†y, vui l√≤ng b·ªè qua email n√†y.</p>"
                    + "</div>"
                    + "</div>";

            msg.setContent(htmlContent, "text/html; charset=UTF-8"); // G·ª≠i n·ªôi dung HTML

            // G·ª≠i email
            Transport.send(msg);
            System.out.println("‚úÖ G·ª≠i OTP th√†nh c√¥ng t·ªõi: " + to);
        } catch (Exception e) {
            System.err.println("‚ùå G·ª≠i email th·∫•t b·∫°i:");
            e.printStackTrace();
        }
        return randomSixDigits;
    }

    public static void sendOrderConfirmation(String to, String buyerName) {
        // Properties : khai bao thuoc tinh
        Properties props = new Properties();
        props.put("mail.smtp.host", "smtp.gmail.com"); // SMTP HOST
        props.put("mail.smtp.port", "587"); // TLS 587 SSL 465
        props.put("mail.smtp.auth", "true");
        props.put("mail.smtp.starttls.enable", "true");

        // create Authenticator
        Authenticator auth = new Authenticator() {
            @Override
            protected PasswordAuthentication getPasswordAuthentication() {
                return new PasswordAuthentication(from, password);
            }
        };

        Session session = Session.getInstance(props, auth);

        try {
            MimeMessage msg = new MimeMessage(session);
            msg.addHeader("Content-type", "text/html; charset=UTF-8");
            msg.setFrom(new InternetAddress(from, "T-Tasty Fruits"));
            msg.setRecipients(Message.RecipientType.TO, InternetAddress.parse(to, false));
            msg.setSubject("üõí ƒê∆°n h√†ng m·ªõi c·ªßa b·∫°n t·∫°i T-Tasty!", "UTF-8");
            msg.setSentDate(new Date());

            String htmlContent = "<div style='font-family:Arial,sans-serif;background:#f9f9f9;padding:40px;'>"
                    + "<div style='max-width:600px;margin:auto;background:white;padding:30px;border-radius:10px;box-shadow:0 0 10px rgba(0,0,0,0.05);'>"
                    + "<div style='text-align:center;'>"
                    + "<img src='https://img.redocn.com/sheji/20240414/yourencaofeijiandeniunaigaoqingtu_13282921.jpg.400.jpg' alt='T-Tasty Logo' style='width:300px;margin-bottom:20px;'/>"
                    + "</div>"
                    + "<h2 style='color:#FF9800;text-align:center;'>C·∫£m ∆°n " + buyerName + " ƒë√£ ƒë·∫∑t h√†ng t·∫°i T-Tasty!</h2>"
                    + "<p style='font-size:16px;color:#555;'>Ch√∫ng t√¥i ƒë√£ nh·∫≠n ƒë∆∞·ª£c ƒë∆°n h√†ng c·ªßa b·∫°n. H√£y ch·ªù ch√∫ng t√¥i x√°c nh·∫≠n v√† chu·∫©n b·ªã ƒë∆°n h√†ng trong th·ªùi gian s·ªõm nh·∫•t.</p>"
                    + "<div style='font-size:16px;text-align:center;margin:20px 0;'>üì¶ ƒê∆°n h√†ng s·∫Ω s·ªõm ƒë∆∞·ª£c x·ª≠ l√Ω.</div>"
                    + "<p style='font-size:14px;color:#999;'>M·ªçi th√¥ng tin x√°c nh·∫≠n s·∫Ω ƒë∆∞·ª£c g·ª≠i qua email. Vui l√≤ng ki·ªÉm tra th∆∞·ªùng xuy√™n.</p>"
                    + "<hr style='margin:30px 0;'>"
                    + "<div style='font-size:14px;color:#777;'>"
                    + "<p><strong>Li√™n h·ªá:</strong> +0344497444</p>"
                    + "<p><strong>Email:</strong> TTasty@gmail.com</p>"
                    + "<p><strong>ƒê·ªãa ch·ªâ:</strong> Long Bi√™n, H√† N·ªôi</p>"
                    + "</div>"
                    + "<p style='font-size:12px;color:#aaa;margin-top:30px;'>N·∫øu b·∫°n kh√¥ng th·ª±c hi·ªán ƒë∆°n h√†ng n√†y, h√£y li√™n h·ªá v·ªõi ch√∫ng t√¥i ƒë·ªÉ ƒë∆∞·ª£c h·ªó tr·ª£.</p>"
                    + "</div>"
                    + "</div>";

            msg.setContent(htmlContent, "text/html; charset=UTF-8");
            Transport.send(msg);
            System.out.println("‚úÖ G·ª≠i email x√°c nh·∫≠n ƒë∆°n h√†ng t·ªõi: " + to);
        } catch (Exception e) {
            System.err.println("‚ùå G·ª≠i email th·∫•t b·∫°i:");
            e.printStackTrace();
        }
    }

    public static void sendOrderAcceptedEmail(String to, String buyerName) {
        Properties props = new Properties();
        props.put("mail.smtp.host", "smtp.gmail.com");
        props.put("mail.smtp.port", "587");
        props.put("mail.smtp.auth", "true");
        props.put("mail.smtp.starttls.enable", "true");

        Authenticator auth = new Authenticator() {
            @Override
            protected PasswordAuthentication getPasswordAuthentication() {
                return new PasswordAuthentication(from, password);
            }
        };

        Session session = Session.getInstance(props, auth);

        try {
            MimeMessage msg = new MimeMessage(session);
            msg.addHeader("Content-type", "text/html; charset=UTF-8");
            msg.setFrom(new InternetAddress(from, "T-Tasty Fruits"));
            msg.setRecipients(Message.RecipientType.TO, InternetAddress.parse(to, false));
            msg.setSubject("‚úÖ ƒê∆°n h√†ng c·ªßa b·∫°n ƒë√£ ƒë∆∞·ª£c x√°c nh·∫≠n!", "UTF-8");
            msg.setSentDate(new Date());

            String htmlContent = "<div style='font-family:Arial,sans-serif;background:#f9f9f9;padding:40px;'>"
                    + "<div style='max-width:600px;margin:auto;background:white;padding:30px;border-radius:10px;box-shadow:0 0 10px rgba(0,0,0,0.05);'>"
                    + "<div style='text-align:center;'>"
                    + "<img src='https://img.redocn.com/sheji/20240414/yourencaofeijiandeniunaigaoqingtu_13282921.jpg.400.jpg' alt='T-Tasty Logo' style='width:300px;margin-bottom:20px;'/>"
                    + "</div>"
                    + "<h2 style='color:#28a745;text-align:center;'>ƒê∆°n h√†ng c·ªßa b·∫°n ƒë√£ ƒë∆∞·ª£c x√°c nh·∫≠n!</h2>"
                    + "<p style='font-size:16px;color:#555;'>Xin ch√†o <strong>" + buyerName + "</strong>,</p>"
                    + "<p style='font-size:16px;color:#555;'>Ch√∫ng t√¥i vui m·ª´ng th√¥ng b√°o r·∫±ng ƒë∆°n h√†ng c·ªßa b·∫°n ƒë√£ ƒë∆∞·ª£c x√°c nh·∫≠n th√†nh c√¥ng v√† ƒëang ƒë∆∞·ª£c chu·∫©n b·ªã ƒë·ªÉ giao.</p>"
                    + "<div style='font-size:16px;text-align:center;margin:20px 0;'>üöö ƒê∆°n h√†ng s·∫Ω ƒë∆∞·ª£c v·∫≠n chuy·ªÉn trong th·ªùi gian s·ªõm nh·∫•t.</div>"
                    + "<hr style='margin:30px 0;'>"
                    + "<div style='font-size:14px;color:#777;'>"
                    + "<p><strong>Li√™n h·ªá:</strong> +0344497444</p>"
                    + "<p><strong>Email:</strong> TTasty@gmail.com</p>"
                    + "<p><strong>ƒê·ªãa ch·ªâ:</strong> Long Bi√™n, H√† N·ªôi</p>"
                    + "</div>"
                    + "<p style='font-size:12px;color:#aaa;margin-top:30px;'>N·∫øu b·∫°n c√≥ b·∫•t k·ª≥ c√¢u h·ªèi n√†o, h√£y li√™n h·ªá v·ªõi ch√∫ng t√¥i ƒë·ªÉ ƒë∆∞·ª£c h·ªó tr·ª£.</p>"
                    + "</div>"
                    + "</div>";

            msg.setContent(htmlContent, "text/html; charset=UTF-8");
            Transport.send(msg);
            System.out.println("‚úÖ ƒê√£ g·ª≠i email x√°c nh·∫≠n t·ªõi: " + to);
        } catch (Exception e) {
            System.err.println("‚ùå L·ªói g·ª≠i email x√°c nh·∫≠n:");
            e.printStackTrace();
        }
    }

    public static void sendOrderRejectedEmail(String to, String buyerName) {
        Properties props = new Properties();
        props.put("mail.smtp.host", "smtp.gmail.com");
        props.put("mail.smtp.port", "587");
        props.put("mail.smtp.auth", "true");
        props.put("mail.smtp.starttls.enable", "true");

        Authenticator auth = new Authenticator() {
            @Override
            protected PasswordAuthentication getPasswordAuthentication() {
                return new PasswordAuthentication(from, password);
            }
        };

        Session session = Session.getInstance(props, auth);

        try {
            MimeMessage msg = new MimeMessage(session);
            msg.addHeader("Content-type", "text/html; charset=UTF-8");
            msg.setFrom(new InternetAddress(from, "T-Tasty Fruits"));
            msg.setRecipients(Message.RecipientType.TO, InternetAddress.parse(to, false));
            msg.setSubject("üõë Xin l·ªói, ƒë∆°n h√†ng c·ªßa b·∫°n ƒë√£ b·ªã t·ª´ ch·ªëi", "UTF-8");
            msg.setSentDate(new Date());

            String htmlContent = "<div style='font-family:Arial,sans-serif;background:#f9f9f9;padding:40px;'>"
                    + "<div style='max-width:600px;margin:auto;background:white;padding:30px;border-radius:10px;box-shadow:0 0 10px rgba(0,0,0,0.05);'>"
                    + "<div style='text-align:center;'>"
                    + "<img src='https://img.redocn.com/sheji/20240414/yourencaofeijiandeniunaigaoqingtu_13282921.jpg.400.jpg' alt='T-Tasty Logo' style='width:300px;margin-bottom:20px;'/>"
                    + "</div>"
                    + "<h2 style='color:#dc3545;text-align:center;'>R·∫•t ti·∫øc ƒë∆°n h√†ng ƒë√£ b·ªã t·ª´ ch·ªëi</h2>"
                    + "<p style='font-size:16px;color:#555;'>Xin ch√†o <strong>" + buyerName + "</strong>,</p>"
                    + "<p style='font-size:16px;color:#555;'>Ch√∫ng t√¥i xin l·ªói v√¨ kh√¥ng th·ªÉ th·ª±c hi·ªán ƒë∆°n h√†ng c·ªßa b·∫°n v√†o l√∫c n√†y.</p>"
                    + "<p style='font-size:16px;color:#555;'>Vui l√≤ng li√™n h·ªá v·ªõi ch√∫ng t√¥i ƒë·ªÉ bi·∫øt th√™m chi ti·∫øt ho·∫∑c h·ªó tr·ª£ th√™m.</p>"
                    + "<div style='font-size:16px;text-align:center;margin:20px 0;'>üì© Ch√∫ng t√¥i r·∫•t ti·∫øc v·ªÅ s·ª± b·∫•t ti·ªán n√†y.</div>"
                    + "<hr style='margin:30px 0;'>"
                    + "<div style='font-size:14px;color:#777;'>"
                    + "<p><strong>Li√™n h·ªá:</strong> +0344497444</p>"
                    + "<p><strong>Email:</strong> TTasty@gmail.com</p>"
                    + "<p><strong>ƒê·ªãa ch·ªâ:</strong> Long Bi√™n, H√† N·ªôi</p>"
                    + "</div>"
                    + "<p style='font-size:12px;color:#aaa;margin-top:30px;'>Ch√∫ng t√¥i mong ƒë∆∞·ª£c ph·ª•c v·ª• b·∫°n v√†o l·∫ßn t·ªõi.</p>"
                    + "</div>"
                    + "</div>";

            msg.setContent(htmlContent, "text/html; charset=UTF-8");
            Transport.send(msg);
            System.out.println("‚ùå ƒê√£ g·ª≠i email xin l·ªói t·ªõi: " + to);
        } catch (Exception e) {
            System.err.println("‚ùå L·ªói g·ª≠i email xin l·ªói:");
            e.printStackTrace();
        }
    }

    public static void main(String[] args) {

        //sendOrderConfirmation("ngnahtg@gmail.com", "tung");
        sendOrderAcceptedEmail("ngnahtg@gmail.com", "tung");
        sendOrderRejectedEmail("ngnahtg@gmail.com", "tung");
    }
}
